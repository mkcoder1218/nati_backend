Password Hashes for Office Officials Setup
==========================================

These are the bcrypt hashes for the passwords used in the setup:

1. Password: "bole2024"
   Hash: $2a$10$YourActualBcryptHashWillGoHere

2. Password: "kirkos2024"  
   Hash: $2a$10$YourActualBcryptHashWillGoHere

3. Password: "citizen123"
   Hash: $2a$10$YourActualBcryptHashWillGoHere

To generate these hashes, you can:

Option 1: Use an online bcrypt generator
- Go to https://bcrypt-generator.com/
- Enter each password and generate with rounds = 10
- Copy the generated hashes

Option 2: Use Node.js (if available)
- Run: node -e "const bcrypt = require('bcryptjs'); console.log('bole2024:', bcrypt.hashSync('bole2024', 10)); console.log('kirkos2024:', bcrypt.hashSync('kirkos2024', 10)); console.log('citizen123:', bcrypt.hashSync('citizen123', 10));"

Option 3: Use the backend server
- Start your backend server
- Use the registration endpoint to create a user with these passwords
- Check the database to see the generated hashes

Once you have the real hashes, replace the placeholder hashes in complete-setup.sql:
- Replace '$2a$10$rQJ8vQJ8vQJ8vQJ8vQJ8vOJ8vQJ8vQJ8vQJ8vQJ8vQJ8vQJ8vQJ8vQ' with the hash for 'bole2024'
- Replace '$2a$10$sRK9wRK9wRK9wRK9wRK9wPK9wRK9wRK9wRK9wRK9wRK9wRK9wRK9wR' with the hash for 'kirkos2024'
- Replace '$2a$10$tSL0uSL0uSL0uSL0uSL0uQL0uSL0uSL0uSL0uSL0uSL0uSL0uSL0uS' with the hash for 'citizen123'
